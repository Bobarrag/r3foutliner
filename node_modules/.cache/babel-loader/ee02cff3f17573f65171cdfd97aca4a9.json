{"ast":null,"code":"var _jsxFileName = \"/Users/bonnybarragan/Documents/astrologuide/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Canvas, extend, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"; //what does \"extend\" means mathematically in this context?  \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls\n});\n\nconst CameraControls = () => {\n  _s();\n\n  //getting the camera and the renderer \"gl\" from the useThree() functions which returneth them and others\n  const {\n    camera,\n    gl\n  } = useThree();\n  return /*#__PURE__*/_jsxDEV(OrbitControls, {\n    args: [camera, gl.domElement]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CameraControls, \"aOHE5qGvbXOvnt+77cY4Zppi/o8=\", false, function () {\n  return [useThree];\n});\n\n_c = CameraControls;\n\nfunction Box(props) {\n  _s2();\n\n  // This reference gives us direct access to the THREE.Mesh object\n  //usereft is like declaring and setting a variable in a class from its parameterx \n  const ref = useRef(); // Hold state for hovered and clicked events\n\n  const [hovered, hover] = useState(false);\n  const [clicked, click] = useState(false); // const boxPosition = [00, 0, 0]\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.x += 0.01); // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    // {...boxPosition}\n    ref: ref,\n    scale: clicked ? 1.5 : 1,\n    onClick: event => click(!clicked),\n    onPointerOver: event => hover(true),\n    onPointerOut: event => hover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Box, \"z4ku1cFD3MTB1blzCtJiPqYRyRY=\", false, function () {\n  return [useFrame];\n});\n\n_c2 = Box;\nexport default function App() {\n  /*PRINCIPLES TO ABIDE BY:\n  CLOSURE\n  DESTRUCTURING OF ARRAYS,OBJ,PARAMS,ETC\n  NEVER VAR, USE LET ALWAYS AND CONST OFTEN\n  USE FOREACH, MAP, AND FILTER, THEY LOOK COMPOTENT\n  UNDERSTAND HOW 'THIS' KEYWORD WORKS\n  USE ... FOR SPREAD AND RESTING OF VARIABLES\n  USE ARROW FUNCTIONS!!!\n  MAKE AN APP THAT OUTLINES 3D SHAPES'S 2D FORM FOR DRAWINGS\n  IMPORT  https://api.le-systeme-solaire.net/ API\n  */\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [10, 10, 10],\n      angle: 0.15,\n      penumbra: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [-10, -10, -10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [0, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useRef","useState","Canvas","extend","useFrame","useThree","OrbitControls","CameraControls","camera","gl","domElement","Box","props","ref","hovered","hover","clicked","click","state","delta","current","rotation","x","event","App"],"sources":["/Users/bonnybarragan/Documents/astrologuide/src/App.js"],"sourcesContent":["import { useRef, useState } from 'react'\nimport { Canvas, extend, useFrame, useThree } from '@react-three/fiber'\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\n//what does \"extend\" means mathematically in this context?  \nextend({OrbitControls});\n\nconst CameraControls = () => {\n  //getting the camera and the renderer \"gl\" from the useThree() functions which returneth them and others\n  const {camera, gl} = useThree();\n  return (\n    <OrbitControls args={[camera, gl.domElement]}/>\n  )\n}\n\nfunction Box(props) {\n  // This reference gives us direct access to the THREE.Mesh object\n  //usereft is like declaring and setting a variable in a class from its parameterx \n  const ref = useRef()\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  // const boxPosition = [00, 0, 0]\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.x += 0.01))\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      // {...boxPosition}\n      ref={ref}\n      scale={clicked ? 1.5 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nexport default function App() {\n    /*PRINCIPLES TO ABIDE BY:\n  CLOSURE\n  DESTRUCTURING OF ARRAYS,OBJ,PARAMS,ETC\n  NEVER VAR, USE LET ALWAYS AND CONST OFTEN\n  USE FOREACH, MAP, AND FILTER, THEY LOOK COMPOTENT\n  UNDERSTAND HOW 'THIS' KEYWORD WORKS\n  USE ... FOR SPREAD AND RESTING OF VARIABLES\n  USE ARROW FUNCTIONS!!!\n  MAKE AN APP THAT OUTLINES 3D SHAPES'S 2D FORM FOR DRAWINGS\n  IMPORT  https://api.le-systeme-solaire.net/ API\n  */\n  return (\n    <Canvas>\n      <ambientLight intensity={0.5} />\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n      <pointLight position={[-10, -10, -10]} />\n      <Box position={[0, 0, 0]} />\n      {/* <CameraControls/> */}\n    </Canvas>\n  )\n}\n"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,QAAnC,QAAmD,oBAAnD;AACA,SAASC,aAAT,QAA8B,2CAA9B,C,CAEA;;;AACAH,MAAM,CAAC;EAACG;AAAD,CAAD,CAAN;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B;EACA,MAAM;IAACC,MAAD;IAASC;EAAT,IAAeJ,QAAQ,EAA7B;EACA,oBACE,QAAC,aAAD;IAAe,IAAI,EAAE,CAACG,MAAD,EAASC,EAAE,CAACC,UAAZ;EAArB;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAND;;GAAMH,c;UAEiBF,Q;;;KAFjBE,c;;AAQN,SAASI,GAAT,CAAaC,KAAb,EAAoB;EAAA;;EAClB;EACA;EACA,MAAMC,GAAG,GAAGb,MAAM,EAAlB,CAHkB,CAIlB;;EACA,MAAM,CAACc,OAAD,EAAUC,KAAV,IAAmBd,QAAQ,CAAC,KAAD,CAAjC;EACA,MAAM,CAACe,OAAD,EAAUC,KAAV,IAAmBhB,QAAQ,CAAC,KAAD,CAAjC,CANkB,CAOlB;EACA;;EACAG,QAAQ,CAAC,CAACc,KAAD,EAAQC,KAAR,KAAmBN,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,IAA9C,CAAR,CATkB,CAUlB;;EACA,oBACE,qBACMV,KADN;IAEE;IACA,GAAG,EAAEC,GAHP;IAIE,KAAK,EAAEG,OAAO,GAAG,GAAH,GAAS,CAJzB;IAKE,OAAO,EAAGO,KAAD,IAAWN,KAAK,CAAC,CAACD,OAAF,CAL3B;IAME,aAAa,EAAGO,KAAD,IAAWR,KAAK,CAAC,IAAD,CANjC;IAOE,YAAY,EAAGQ,KAAD,IAAWR,KAAK,CAAC,KAAD,CAPhC;IAAA,wBAQE;MAAa,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;IAAnB;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAsB,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe;IAAnD;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;IAxBQH,G;UASPP,Q;;;MATOO,G;AA0BT,eAAe,SAASa,GAAT,GAAe;EAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,oBACE,QAAC,MAAD;IAAA,wBACE;MAAc,SAAS,EAAE;IAAzB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAW,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAArB;MAAmC,KAAK,EAAE,IAA1C;MAAgD,QAAQ,EAAE;IAA1D;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAY,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAC,EAAP,EAAW,CAAC,EAAZ;IAAtB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,GAAD;MAAK,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;IAAf;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;MArBuBA,G"},"metadata":{},"sourceType":"module"}