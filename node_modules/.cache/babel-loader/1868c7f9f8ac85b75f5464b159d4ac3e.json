{"ast":null,"code":"var _jsxFileName = \"/Users/bonnybarragan/Documents/drawaboxoutliner/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo, useEffect } from 'react';\nimport { Canvas, extend, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { shaderMaterial } from '@react-three/drei';\nimport { Vector2 } from 'three';\nimport { BackSide } from 'three'; //what does \"extend\" means mathematically in this context?  \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls,\n  shaderMaterial\n});\n/*PRINCIPLES TO ABIDE BY:\nCLOSURE\nDESTRUCTURING OF ARRAYS,OBJ,PARAMS,ETC\nNEVER VAR, USE LET ALWAYS AND CONST OFTEN\nUSE FOREACH, MAP, AND FILTER, THEY LOOK COMPOTENT\nUNDERSTAND HOW 'THIS' KEYWORD WORKS\nUSE ... FOR SPREAD AND RESTING OF VARIABLES\nUSE ARROW FUNCTIONS!!!\nMAKE AN APP THAT OUTLINES 3D SHAPES'S 2D FORM FOR DRAWINGS\nIMPORT  https://api.le-systeme-solaire.net/ API\nPREFER FUNCTIONS OVER CLASSES, NOT SURE WHY\nPrefer to make components 'dumb', as in, focused on displaying a value to UI\nand let custom hooks handle complex bussiness logic. don't really understand this yet so leaving here:\nhttps://youtu.be/b0IZo2Aho9Y?t=460\nuseRef breakthrough, useref just returns an object with a single property: \"current\"\nconst ref = useRef() essentially creates an object ref which has one property {current: undefined}, basically like\nwriting \"new Ref;\" \"ref.current = count;\" ref now returns the object {current: count}\nref.current would now equal w/e the count is\n*/\n//children is the child elements of composer component\n// const Outliner = (props) => {\n// const {gl, scene, camera, size} = useThree();\n// const composer = useRef();\n// const aspect = useMemo( () => new Vector2( size.width, size.height ), [size] );\n// useFrame(() => composer.current.render(), 1);\n//   console.log(props.children)\n//   return(\n// OLD APPROACH, TRYING RENDERING BACKSIDE\n// MAY JUST HARDCODE FIRST THEN REFACTOR TO B FUNC THAT RECEIVES AN OBJ\n// <effectComposer ref = {composer} args = {[gl]}>\n//   <renderPass attachArray= \"passes\" args = {[scene, camera]}/>\n//   <outlinePass\n//   attachArray=\"passes\"\n//   args={[aspect, scene, camera]}\n//   selectedObjects= {[props.children]}\n//   visibleEdgeColor = \"orange\"\n//   edgeStretch={50}\n//   edgeThickness={1}\n//   />\n// </effectComposer>\n//   )\n// }\n\nconst context = /*#__PURE__*/React.createContext();\n\nconst CameraControls = () => {\n  _s();\n\n  //getting the camera and the renderer \"gl\" from the useThree() functions which returneth them and others\n  const {\n    camera,\n    gl\n  } = useThree();\n  return (\n    /*#__PURE__*/\n    //this HAS to be orbitControls not OrbitControls for some reason\n    //if starts with capital gives \"need new invoke three.js blah blah\" error\n    _jsxDEV(\"orbitControls\", {\n      args: [camera, gl.domElement]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(CameraControls, \"aOHE5qGvbXOvnt+77cY4Zppi/o8=\", false, function () {\n  return [useThree];\n});\n\n_c = CameraControls;\n\nfunction Box(props) {\n  _s2();\n\n  // This reference gives us direct access to the THREE.Mesh object\n  //usereft is like declaring and setting a variable in a class from its parameterx \n  const ref = useRef(); // Hold state for hovered and clicked events\n  // line 65 in laymans pseudocode:  State Hovered = false; func setHover(updatedState){hovered = updatedState}\n\n  const [hovered, hover] = useState(false);\n  const [clicked, click] = useState(false); // const boxPosition = [00, 0, 0]\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  // useFrame((state, delta) => (ref.current.rotation.x += 0.01))\n  // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"lineSegments\", {\n      children: /*#__PURE__*/_jsxDEV(\"edgesGeometry\", {\n        args: boxGeometry(1, 1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Box, \"1rXSAAyBFhZEmUuKkdeoiIUYaY8=\");\n\n_c2 = Box;\n\nconst Outliner = props => {\n  _s3();\n\n  // props will be mesh = {Box} i\n  // should return <outline \n  const GeometryRef = useRef();\n  return (\n    /*#__PURE__*/\n    // make a regular render of passed mesh <box>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(props.children.type, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: [0, 0, 0] // {...boxPosition}\n        ,\n        scale: 3.1 // onClick={(event) => click(!clicked)}\n        // onPointerOver={(event) => hover(true)}\n        // onPointerOut={(event) => hover(false)}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          scale: 1.05,\n          args: [1, 1, 2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n          depthWrite: false,\n          color: \"#f3bf10\",\n          side: BackSide,\n          size: \"1.8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) // make a depthwrite= false attributed component of passed mesh <box depthwrite =false blah = THREE.backside>\n\n  );\n};\n\n_s3(Outliner, \"8DfsQxC89CYFjAq+DS7ZYvhqC/M=\");\n\n_c3 = Outliner;\nexport default function App() {\n  return (\n    /*#__PURE__*/\n    //empty tags is react.fragment, DOM-like structure without actually modifying elements\n    _jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n          position: [10, 10, 10],\n          angle: 0.15,\n          penumbra: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [-10, -10, -10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Outliner, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            position: [0, 0, 0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CameraControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c4 = App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CameraControls\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"Outliner\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useRef","useState","useMemo","useEffect","Canvas","extend","useFrame","useThree","OrbitControls","shaderMaterial","Vector2","BackSide","context","createContext","CameraControls","camera","gl","domElement","Box","props","ref","hovered","hover","clicked","click","boxGeometry","Outliner","GeometryRef","App","position","width","height"],"sources":["/Users/bonnybarragan/Documents/drawaboxoutliner/src/App.js"],"sourcesContent":["import React, { useRef, useState, useMemo, useEffect } from 'react'\nimport {Canvas, extend, useFrame, useThree} from '@react-three/fiber'\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { shaderMaterial } from '@react-three/drei'\nimport { Vector2 } from 'three';\nimport { BackSide } from 'three';\n\n//what does \"extend\" means mathematically in this context?  \nextend({OrbitControls, shaderMaterial});\n\n  /*PRINCIPLES TO ABIDE BY:\n  CLOSURE\n  DESTRUCTURING OF ARRAYS,OBJ,PARAMS,ETC\n  NEVER VAR, USE LET ALWAYS AND CONST OFTEN\n  USE FOREACH, MAP, AND FILTER, THEY LOOK COMPOTENT\n  UNDERSTAND HOW 'THIS' KEYWORD WORKS\n  USE ... FOR SPREAD AND RESTING OF VARIABLES\n  USE ARROW FUNCTIONS!!!\n  MAKE AN APP THAT OUTLINES 3D SHAPES'S 2D FORM FOR DRAWINGS\n  IMPORT  https://api.le-systeme-solaire.net/ API\n  PREFER FUNCTIONS OVER CLASSES, NOT SURE WHY\n  Prefer to make components 'dumb', as in, focused on displaying a value to UI\n  and let custom hooks handle complex bussiness logic. don't really understand this yet so leaving here:\n  https://youtu.be/b0IZo2Aho9Y?t=460\n  useRef breakthrough, useref just returns an object with a single property: \"current\"\n  const ref = useRef() essentially creates an object ref which has one property {current: undefined}, basically like\n  writing \"new Ref;\" \"ref.current = count;\" ref now returns the object {current: count}\n  ref.current would now equal w/e the count is\n  */\n\n//children is the child elements of composer component\n\n// const Outliner = (props) => {\n  // const {gl, scene, camera, size} = useThree();\n  // const composer = useRef();\n  // const aspect = useMemo( () => new Vector2( size.width, size.height ), [size] );\n  // useFrame(() => composer.current.render(), 1);\n//   console.log(props.children)\n//   return(\n    // OLD APPROACH, TRYING RENDERING BACKSIDE\n    // MAY JUST HARDCODE FIRST THEN REFACTOR TO B FUNC THAT RECEIVES AN OBJ\n    // <effectComposer ref = {composer} args = {[gl]}>\n    //   <renderPass attachArray= \"passes\" args = {[scene, camera]}/>\n    //   <outlinePass\n    //   attachArray=\"passes\"\n    //   args={[aspect, scene, camera]}\n    //   selectedObjects= {[props.children]}\n    //   visibleEdgeColor = \"orange\"\n    //   edgeStretch={50}\n    //   edgeThickness={1}\n    //   />\n    // </effectComposer>\n//   )\n// }\n\nconst context = React.createContext()\n\nconst CameraControls = () => {\n  //getting the camera and the renderer \"gl\" from the useThree() functions which returneth them and others\n  const {camera, gl} = useThree();\n  return (\n    //this HAS to be orbitControls not OrbitControls for some reason\n    //if starts with capital gives \"need new invoke three.js blah blah\" error\n    <orbitControls args={[camera, gl.domElement]}/>\n  )\n}\n\nfunction Box(props) {\n  // This reference gives us direct access to the THREE.Mesh object\n  //usereft is like declaring and setting a variable in a class from its parameterx \n  const ref = useRef();\n  // Hold state for hovered and clicked events\n  // line 65 in laymans pseudocode:  State Hovered = false; func setHover(updatedState){hovered = updatedState}\n  const [hovered, hover] = useState(false);\n  const [clicked, click] = useState(false);\n  // const boxPosition = [00, 0, 0]\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  // useFrame((state, delta) => (ref.current.rotation.x += 0.01))\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh>\n      <lineSegments>\n        <edgesGeometry args = {boxGeometry(1, 1, 1)}/>\n      </lineSegments>\n      <boxGeometry args={[1, 1, 2]} />\n\n    </mesh>\n  )\n}\n\nconst Outliner = props => {\n\n  // props will be mesh = {Box} i\n  // should return <outline \n  const GeometryRef = useRef();\n  return (\n     // make a regular render of passed mesh <box>\n    <>\n      <props.children.type/>\n      <mesh\n        position = {[0, 0, 0]}\n        // {...boxPosition}\n        scale={3.1}\n        // onClick={(event) => click(!clicked)}\n        // onPointerOver={(event) => hover(true)}\n        // onPointerOut={(event) => hover(false)}\n        >\n\n        <boxGeometry scale = {1.05}args={[1, 1, 2]} />\n        <shaderMaterial depthWrite = {false} color=\"#f3bf10\" side ={BackSide} size = \"1.8\"/>\n      </mesh>\n    </>\n     // make a depthwrite= false attributed component of passed mesh <box depthwrite =false blah = THREE.backside>\n  )\n\n}\n\nexport default function App() {\n  return (\n    //empty tags is react.fragment, DOM-like structure without actually modifying elements\n    <div style= {{position: 'absolute', width: '100%', height: '100%'}}>\n      <Canvas>\n        <ambientLight intensity={0.5} />\n        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n        <pointLight position={[-10, -10, -10]} />\n        <Outliner>\n          <Box position={[0, 0, 0]} />\n        </Outliner>\n        {/* <Box position = {[0,0,0]} /> */}\n        <CameraControls/>\n      </Canvas>\n  {/* <counter/> */}\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}